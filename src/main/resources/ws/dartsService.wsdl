<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://com.synapps.mojdarts.service.com" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://com.synapps.mojdarts.service.com" name="DARTSService">
  <wsdl:types>
    <xsd:schema xmlns:tns="http://rt.fs.documentum.emc.com/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dfs-rt="http://rt.fs.documentum.emc.com/" elementFormDefault="unqualified" targetNamespace="http://rt.fs.documentum.emc.com/" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="ServiceException" type="tns:ServiceException"/>
      <xsd:complexType name="ServiceException">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="exceptionBean" maxOccurs="unbounded" type="tns:DfsExceptionHolder" nillable="true"/>
          <xsd:element minOccurs="0" name="message" type="xs:string"/>
          <xsd:element minOccurs="0" name="messageArgs" maxOccurs="unbounded" type="xs:anyType" nillable="true"/>
          <xsd:element minOccurs="0" name="messageId" type="xs:string"/>
          <xsd:element minOccurs="0" name="stackTraceAsString" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DfsExceptionHolder">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="attribute" maxOccurs="unbounded" type="tns:DfsAttributeHolder" nillable="true"/>
          <xsd:element minOccurs="0" name="exceptionClass" type="xs:string"/>
          <xsd:element minOccurs="0" name="genericType" type="xs:string"/>
          <xsd:element minOccurs="0" name="message" type="xs:string"/>
          <xsd:element minOccurs="0" name="messageId" type="xs:string"/>
          <xsd:element minOccurs="0" name="stackTrace" maxOccurs="unbounded" type="tns:StackTraceHolder" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DfsAttributeHolder">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="name" type="xs:string"/>
          <xsd:element minOccurs="0" name="type" type="xs:string"/>
          <xsd:element minOccurs="0" name="value" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StackTraceHolder">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="className" type="xs:string"/>
          <xsd:element minOccurs="0" name="fileName" type="xs:string"/>
          <xsd:element name="lineNumber" type="xs:int"/>
          <xsd:element minOccurs="0" name="methodName" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:tns="http://response.dfs.moj.synapps.com/" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://response.dfs.moj.synapps.com/" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="DARTSResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="code" type="xs:string"/>
          <xsd:element minOccurs="0" name="message" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="GetCourtLogResponse">
        <xsd:complexContent>
          <xsd:extension base="tns:DARTSResponse">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="court_log" type="tns:court_log"/>
              <xsd:element minOccurs="0" name="entries" maxOccurs="unbounded" type="tns:CourtLogEntry" nillable="true"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="court_log">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="entry" maxOccurs="unbounded" type="tns:CourtLogEntry"/>
        </xsd:sequence>
        <xsd:attribute name="courthouse" type="xs:string"/>
        <xsd:attribute name="case_number" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="CourtLogEntry">
        <xsd:simpleContent>
          <xsd:extension base="xs:string">
            <xsd:attribute name="Y" type="xs:string"/>
            <xsd:attribute name="M" type="xs:string"/>
            <xsd:attribute name="D" type="xs:string"/>
            <xsd:attribute name="H" type="xs:string"/>
            <xsd:attribute name="MIN" type="xs:string"/>
            <xsd:attribute name="S" type="xs:string"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="RegisterNodeResponse">
        <xsd:complexContent>
          <xsd:extension base="tns:DARTSResponse">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="node_id" type="xs:string"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="GetCasesResponse">
        <xsd:complexContent>
          <xsd:extension base="tns:DARTSResponse">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="cases" type="tns:cases"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="cases">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="case" maxOccurs="unbounded" type="tns:Case"/>
        </xsd:sequence>
        <xsd:attribute name="courthouse" type="xs:string"/>
        <xsd:attribute name="courtroom" type="xs:string"/>
        <xsd:attribute name="Y" type="xs:string"/>
        <xsd:attribute name="M" type="xs:string"/>
        <xsd:attribute name="D" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="Case">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="case_number" type="xs:string"/>
          <xsd:element minOccurs="0" name="scheduled_start" type="xs:string"/>
          <xsd:element minOccurs="0" name="upload_priority" type="xs:string"/>
          <xsd:element minOccurs="0" name="defendants" type="tns:defendants"/>
          <xsd:element minOccurs="0" name="judges" type="tns:judges"/>
          <xsd:element minOccurs="0" name="prosecutors" type="tns:prosecutors"/>
          <xsd:element minOccurs="0" name="defenders" type="tns:defenders"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="defendants">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="defendant" maxOccurs="unbounded" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="judges">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="judge" maxOccurs="unbounded" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="prosecutors">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="prosecutor" maxOccurs="unbounded" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="defenders">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="defender" maxOccurs="unbounded" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:dfs-dm-core="http://core.datamodel.fs.documentum.emc.com/" xmlns:tns="http://properties.core.datamodel.fs.documentum.emc.com/" xmlns:dfs-dm-core-properties="http://properties.core.datamodel.fs.documentum.emc.com/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://properties.core.datamodel.fs.documentum.emc.com/" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="PropertySet">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Properties" maxOccurs="unbounded" type="tns:Property"/>
        </xsd:sequence>
        <xsd:attribute use="required" name="isInternal" type="xs:boolean"/>
      </xsd:complexType>
      <xsd:complexType name="Property" abstract="true">
        <xsd:sequence/>
        <xsd:attribute use="required" name="name" type="xs:string"/>
        <xsd:attribute use="required" name="isTransient" type="xs:boolean"/>
      </xsd:complexType>
      <xsd:complexType name="StringProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:Property">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Value" type="xs:string"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NumberProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:Property">
            <xsd:sequence>
              <xsd:choice minOccurs="0">
                <xsd:element name="Short" type="xs:short"/>
                <xsd:element name="Integer" type="xs:int"/>
                <xsd:element name="Long" type="xs:long"/>
                <xsd:element name="Double" type="xs:double"/>
              </xsd:choice>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DateProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:Property">
            <xsd:sequence>
              <xsd:element name="Value" type="xs:dateTime"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="BooleanProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:Property">
            <xsd:sequence>
              <xsd:element name="Value" type="xs:boolean"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ObjectIdProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:Property">
            <xsd:sequence>
              <xsd:element name="Value" type="dfs-dm-core:ObjectId"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="StringArrayProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:ArrayProperty">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Values" maxOccurs="unbounded" type="xs:string" nillable="true"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayProperty" abstract="true">
        <xsd:complexContent>
          <xsd:extension base="tns:Property">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="ValueActions" maxOccurs="unbounded" type="tns:ValueAction"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ValueAction">
        <xsd:sequence/>
        <xsd:attribute use="required" name="type" type="tns:ValueActionType"/>
        <xsd:attribute use="required" name="index" type="xs:int"/>
      </xsd:complexType>
      <xsd:complexType name="NumberArrayProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:ArrayProperty">
            <xsd:sequence>
              <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element name="Short" type="xs:short" nillable="true"/>
                <xsd:element name="Integer" type="xs:int" nillable="true"/>
                <xsd:element name="Long" type="xs:long" nillable="true"/>
                <xsd:element name="Double" type="xs:double" nillable="true"/>
              </xsd:choice>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="BooleanArrayProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:ArrayProperty">
            <xsd:sequence>
              <xsd:element name="Values" maxOccurs="unbounded" type="xs:boolean" nillable="true"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DateArrayProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:ArrayProperty">
            <xsd:sequence>
              <xsd:element name="Values" maxOccurs="unbounded" type="xs:dateTime" nillable="true"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ObjectIdArrayProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:ArrayProperty">
            <xsd:sequence>
              <xsd:element name="Values" maxOccurs="unbounded" type="dfs-dm-core:ObjectId" nillable="true"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RichTextProperty">
        <xsd:complexContent>
          <xsd:extension base="tns:Property">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Value" type="dfs-dm-core:RichText"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:simpleType name="ValueActionType">
        <xsd:restriction base="xs:string">
          <xsd:enumeration value="APPEND"/>
          <xsd:enumeration value="INSERT"/>
          <xsd:enumeration value="DELETE"/>
          <xsd:enumeration value="SET"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema xmlns:dfs-dm-core-context="http://context.core.datamodel.fs.documentum.emc.com/" xmlns:tns="http://core.datamodel.fs.documentum.emc.com/" xmlns:dfs-dm-core-properties="http://properties.core.datamodel.fs.documentum.emc.com/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dfs-dm-core-profiles="http://profiles.core.datamodel.fs.documentum.emc.com/" xmlns:dfs-dm-core-content="http://content.core.datamodel.fs.documentum.emc.com/" elementFormDefault="qualified" targetNamespace="http://core.datamodel.fs.documentum.emc.com/" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="DataPackage">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="DataObjects" maxOccurs="unbounded" type="tns:DataObject"/>
        </xsd:sequence>
        <xsd:attribute name="repositoryName" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="DataObject">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Aspects" maxOccurs="unbounded" type="tns:Aspect"/>
          <xsd:element minOccurs="0" name="Identity" type="tns:ObjectIdentity"/>
          <xsd:element minOccurs="0" name="Properties" type="dfs-dm-core-properties:PropertySet"/>
          <xsd:element minOccurs="0" name="Relationships" maxOccurs="unbounded" type="tns:Relationship"/>
          <xsd:element minOccurs="0" name="Contents" maxOccurs="unbounded" type="dfs-dm-core-content:Content"/>
          <xsd:element minOccurs="0" name="Permissions" maxOccurs="unbounded" type="tns:Permission"/>
        </xsd:sequence>
        <xsd:attribute name="type" type="xs:string"/>
        <xsd:attribute name="transientId" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="Aspect">
        <xsd:sequence/>
        <xsd:attribute use="required" name="name" type="xs:string"/>
        <xsd:attribute name="intentModifier" type="tns:AspectIntentModifier"/>
      </xsd:complexType>
      <xsd:complexType name="ObjectIdentity">
        <xsd:sequence>
          <xsd:choice minOccurs="0">
            <xsd:element name="ObjectId" type="tns:ObjectId"/>
            <xsd:element name="ObjectKey" type="tns:ObjectKey"/>
            <xsd:element name="ObjectPath" type="tns:ObjectPath"/>
            <xsd:element name="Qualification" type="tns:Qualification"/>
            <xsd:element name="CompositeObjectId" type="tns:CompositeObjectId"/>
            <xsd:element name="StringUri" type="xs:string"/>
          </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="valueType" type="tns:ObjectIdentityType"/>
        <xsd:attribute name="repositoryName" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="ObjectId">
        <xsd:sequence/>
        <xsd:attribute use="required" name="id" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="ObjectKey">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="PropertySet" type="dfs-dm-core-properties:PropertySet"/>
        </xsd:sequence>
        <xsd:attribute use="required" name="objectType" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="RichText">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Body" type="dfs-dm-core-content:Content"/>
          <xsd:element minOccurs="0" name="Contents" maxOccurs="unbounded" type="dfs-dm-core-content:Content"/>
        </xsd:sequence>
        <xsd:attribute name="format" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="ObjectPath">
        <xsd:sequence/>
        <xsd:attribute name="path" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="Qualification">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="String" type="xs:string"/>
        </xsd:sequence>
        <xsd:attribute name="qualificationValueType" type="tns:QualificationValueType"/>
        <xsd:attribute name="objectType" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="CompositeObjectId">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="PropertySet" type="dfs-dm-core-properties:PropertySet"/>
        </xsd:sequence>
        <xsd:attribute use="required" name="objectType" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="Relationship" abstract="true">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="RelationshipProperties" type="dfs-dm-core-properties:PropertySet"/>
        </xsd:sequence>
        <xsd:attribute use="required" name="name" type="xs:string"/>
        <xsd:attribute use="required" name="targetRole" type="xs:string"/>
        <xsd:attribute name="intentModifier" type="tns:RelationshipIntentModifier"/>
      </xsd:complexType>
      <xsd:complexType name="ReferenceRelationship">
        <xsd:complexContent>
          <xsd:extension base="tns:Relationship">
            <xsd:sequence>
              <xsd:element name="Target" type="tns:ObjectIdentity"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ObjectRelationship">
        <xsd:complexContent>
          <xsd:extension base="tns:Relationship">
            <xsd:sequence>
              <xsd:element name="Target" type="tns:DataObject"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Permission">
        <xsd:sequence/>
        <xsd:attribute use="required" name="type" type="tns:PermissionType"/>
        <xsd:attribute use="required" name="name" type="xs:string"/>
      </xsd:complexType>
      <xsd:simpleType name="AspectIntentModifier">
        <xsd:restriction base="xs:string">
          <xsd:enumeration value="ATTACH"/>
          <xsd:enumeration value="DETACH"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ObjectIdentityType">
        <xsd:restriction base="xs:string">
          <xsd:enumeration value="UNDEFINED"/>
          <xsd:enumeration value="OBJECT_ID"/>
          <xsd:enumeration value="OBJECT_KEY"/>
          <xsd:enumeration value="OBJECT_PATH"/>
          <xsd:enumeration value="QUALIFICATION"/>
          <xsd:enumeration value="COMPOSITE_OBJECT_ID"/>
          <xsd:enumeration value="STRING_URI"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="QualificationValueType">
        <xsd:restriction base="xs:string">
          <xsd:enumeration value="UNDEFINED"/>
          <xsd:enumeration value="STRING"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="RelationshipIntentModifier">
        <xsd:restriction base="xs:string">
          <xsd:enumeration value="ADD"/>
          <xsd:enumeration value="REMOVE"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PermissionType">
        <xsd:restriction base="xs:string">
          <xsd:enumeration value="BASIC"/>
          <xsd:enumeration value="EXTENDED"/>
          <xsd:enumeration value="CUSTOM"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema xmlns:dfs-dm-core-context="http://context.core.datamodel.fs.documentum.emc.com/" xmlns:tns="http://content.core.datamodel.fs.documentum.emc.com/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dfs-dm-core-profiles="http://profiles.core.datamodel.fs.documentum.emc.com/" xmlns:dfs-dm-core-content="http://content.core.datamodel.fs.documentum.emc.com/" elementFormDefault="qualified" targetNamespace="http://content.core.datamodel.fs.documentum.emc.com/" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="Content" abstract="true">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="renditionType" type="tns:RenditionType" nillable="true"/>
        </xsd:sequence>
        <xsd:attribute use="required" name="format" type="xs:string"/>
        <xsd:attribute use="required" name="pageNumber" type="xs:int"/>
        <xsd:attribute name="pageModifier" type="xs:string"/>
        <xsd:attribute name="contentTransferMode" type="tns:ContentTransferMode"/>
      </xsd:complexType>
      <xsd:complexType name="BinaryContent">
        <xsd:complexContent>
          <xsd:extension base="tns:Content">
            <xsd:sequence>
              <xsd:element name="Value" type="xs:base64Binary"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DataHandlerContent">
        <xsd:complexContent>
          <xsd:extension base="tns:Content">
            <xsd:sequence>
              <xsd:element name="Value"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="UcfContent">
        <xsd:complexContent>
          <xsd:extension base="tns:Content">
            <xsd:sequence>
              <xsd:element name="LocalFilePath" type="xs:string"/>
              <xsd:element minOccurs="0" name="ActivityInfo" type="tns:ActivityInfo"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ActivityInfo">
        <xsd:sequence/>
        <xsd:attribute use="required" name="sessionId" type="xs:string"/>
        <xsd:attribute name="initiatorSessionId" type="xs:string"/>
        <xsd:attribute use="required" name="activityId" type="xs:string"/>
        <xsd:attribute use="required" name="autoCloseConnection" type="xs:boolean"/>
        <xsd:attribute use="required" name="closed" type="xs:boolean"/>
        <xsd:attribute name="targetDeploymentId" type="xs:string"/>
        <xsd:attribute name="initiatorDeploymentId" type="xs:string"/>
      </xsd:complexType>
      <xsd:complexType name="UrlContent">
        <xsd:complexContent>
          <xsd:extension base="tns:Content">
            <xsd:sequence/>
            <xsd:attribute use="required" name="url" type="xs:string"/>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:simpleType name="RenditionType">
        <xsd:restriction base="xs:string">
          <xsd:enumeration value="CLIENT"/>
          <xsd:enumeration value="SERVER"/>
          <xsd:enumeration value="PRIMARY"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ContentTransferMode">
        <xsd:restriction base="xs:string">
          <xsd:enumeration value="BASE64"/>
          <xsd:enumeration value="MTOM"/>
          <xsd:enumeration value="UCF"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema xmlns:ns1="http://response.dfs.moj.synapps.com/" xmlns:ns2="http://core.datamodel.fs.documentum.emc.com/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://com.synapps.mojdarts.service.com" targetNamespace="http://com.synapps.mojdarts.service.com" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="Exception" type="tns:Exception"/>
      <xsd:element name="addAudio" type="tns:addAudio"/>
      <xsd:element name="addAudioResponse" type="tns:addAudioResponse"/>
      <xsd:element name="addCase" type="tns:addCase"/>
      <xsd:element name="addCaseResponse" type="tns:addCaseResponse"/>
      <xsd:element name="addDocument" type="tns:addDocument"/>
      <xsd:element name="addDocumentResponse" type="tns:addDocumentResponse"/>
      <xsd:element name="addLogEntry" type="tns:addLogEntry"/>
      <xsd:element name="addLogEntryResponse" type="tns:addLogEntryResponse"/>
      <xsd:element name="getCases" type="tns:getCases"/>
      <xsd:element name="getCasesResponse" type="tns:getCasesResponse"/>
      <xsd:element name="getCourtLog" type="tns:getCourtLog"/>
      <xsd:element name="getCourtLogResponse" type="tns:getCourtLogResponse"/>
      <xsd:element name="registerNode" type="tns:registerNode"/>
      <xsd:element name="registerNodeResponse" type="tns:registerNodeResponse"/>
      <xsd:element name="requestTranscription" type="tns:requestTranscription"/>
      <xsd:element name="requestTranscriptionResponse" type="tns:requestTranscriptionResponse"/>
      <xsd:element name="response" type="ns1:DARTSResponse"/>
      <xsd:complexType name="addLogEntry">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="document" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addLogEntryResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns1:DARTSResponse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Exception">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="message" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addDocument">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="messageId" type="xs:string"/>
          <xsd:element minOccurs="0" name="type" type="xs:string"/>
          <xsd:element minOccurs="0" name="subType" type="xs:string"/>
          <xsd:element minOccurs="0" name="document" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addDocumentResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns1:DARTSResponse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addAudio">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="document" type="xs:string"/>
          <xsd:element minOccurs="0" name="dataPackage" type="ns2:DataPackage"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addAudioResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns1:DARTSResponse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="requestTranscription">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="document" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="requestTranscriptionResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns1:DARTSResponse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addCase">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="document" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addCaseResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns1:DARTSResponse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getCourtLog">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="courthouse" type="xs:string"/>
          <xsd:element minOccurs="0" name="caseNumber" type="xs:string"/>
          <xsd:element minOccurs="0" name="startTime" type="xs:string"/>
          <xsd:element minOccurs="0" name="endTime" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getCourtLogResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns1:GetCourtLogResponse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="registerNode">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="document" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="registerNodeResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns1:RegisterNodeResponse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getCases">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="courthouse" type="xs:string"/>
          <xsd:element minOccurs="0" name="courtroom" type="xs:string"/>
          <xsd:element minOccurs="0" name="date" type="xs:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getCasesResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns1:GetCasesResponse"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="addAudio">
    <wsdl:part name="parameters" element="tns:addAudio"/>
  </wsdl:message>
  <wsdl:message name="addAudioResponse">
    <wsdl:part name="parameters" element="tns:addAudioResponse"/>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part name="fault" element="tns:Exception"/>
  </wsdl:message>
  <wsdl:message name="ServiceException">
    <wsdl:part xmlns:ns1="http://rt.fs.documentum.emc.com/" name="fault" element="ns1:ServiceException"/>
  </wsdl:message>
  <wsdl:message name="addCase">
    <wsdl:part name="parameters" element="tns:addCase"/>
  </wsdl:message>
  <wsdl:message name="addCaseResponse">
    <wsdl:part name="parameters" element="tns:addCaseResponse"/>
  </wsdl:message>
  <wsdl:message name="requestTranscription">
    <wsdl:part name="parameters" element="tns:requestTranscription"/>
  </wsdl:message>
  <wsdl:message name="requestTranscriptionResponse">
    <wsdl:part name="parameters" element="tns:requestTranscriptionResponse"/>
  </wsdl:message>
  <wsdl:message name="registerNode">
    <wsdl:part name="parameters" element="tns:registerNode"/>
  </wsdl:message>
  <wsdl:message name="registerNodeResponse">
    <wsdl:part name="parameters" element="tns:registerNodeResponse"/>
  </wsdl:message>
  <wsdl:message name="getCases">
    <wsdl:part name="parameters" element="tns:getCases"/>
  </wsdl:message>
  <wsdl:message name="getCasesResponse">
    <wsdl:part name="parameters" element="tns:getCasesResponse"/>
  </wsdl:message>
  <wsdl:message name="getCourtLog">
    <wsdl:part name="parameters" element="tns:getCourtLog"/>
  </wsdl:message>
  <wsdl:message name="getCourtLogResponse">
    <wsdl:part name="parameters" element="tns:getCourtLogResponse"/>
  </wsdl:message>
  <wsdl:message name="addLogEntry">
    <wsdl:part name="parameters" element="tns:addLogEntry"/>
  </wsdl:message>
  <wsdl:message name="addLogEntryResponse">
    <wsdl:part name="parameters" element="tns:addLogEntryResponse"/>
  </wsdl:message>
  <wsdl:message name="addDocument">
    <wsdl:part name="parameters" element="tns:addDocument"/>
  </wsdl:message>
  <wsdl:message name="addDocumentResponse">
    <wsdl:part name="parameters" element="tns:addDocumentResponse"/>
  </wsdl:message>
  <wsdl:portType name="DARTSServicePort">
    <wsdl:operation name="addAudio">
      <wsdl:input message="tns:addAudio"/>
      <wsdl:output message="tns:addAudioResponse"/>
      <wsdl:fault name="Exception" message="tns:Exception"/>
      <wsdl:fault name="ServiceException" message="tns:ServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addCase">
      <wsdl:input message="tns:addCase"/>
      <wsdl:output message="tns:addCaseResponse"/>
      <wsdl:fault name="Exception" message="tns:Exception"/>
      <wsdl:fault name="ServiceException" message="tns:ServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="requestTranscription">
      <wsdl:input message="tns:requestTranscription"/>
      <wsdl:output message="tns:requestTranscriptionResponse"/>
      <wsdl:fault name="Exception" message="tns:Exception"/>
      <wsdl:fault name="ServiceException" message="tns:ServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="registerNode">
      <wsdl:input message="tns:registerNode"/>
      <wsdl:output message="tns:registerNodeResponse"/>
      <wsdl:fault name="Exception" message="tns:Exception"/>
      <wsdl:fault name="ServiceException" message="tns:ServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCases">
      <wsdl:input message="tns:getCases"/>
      <wsdl:output message="tns:getCasesResponse"/>
      <wsdl:fault name="Exception" message="tns:Exception"/>
      <wsdl:fault name="ServiceException" message="tns:ServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCourtLog">
      <wsdl:input message="tns:getCourtLog"/>
      <wsdl:output message="tns:getCourtLogResponse"/>
      <wsdl:fault name="Exception" message="tns:Exception"/>
      <wsdl:fault name="ServiceException" message="tns:ServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addLogEntry">
      <wsdl:input message="tns:addLogEntry"/>
      <wsdl:output message="tns:addLogEntryResponse"/>
      <wsdl:fault name="Exception" message="tns:Exception"/>
      <wsdl:fault name="ServiceException" message="tns:ServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addDocument">
      <wsdl:input message="tns:addDocument"/>
      <wsdl:output message="tns:addDocumentResponse"/>
      <wsdl:fault name="Exception" message="tns:Exception"/>
      <wsdl:fault name="ServiceException" message="tns:ServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DARTSServicePortBinding" type="tns:DARTSServicePort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
    <wsdl:operation name="addAudio">
      <soap:operation soapAction="" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      <wsdl:input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault use="literal" name="Exception" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault use="literal" name="ServiceException" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCase">
      <soap:operation soapAction="" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      <wsdl:input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault use="literal" name="Exception" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault use="literal" name="ServiceException" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestTranscription">
      <soap:operation soapAction="" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      <wsdl:input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault use="literal" name="Exception" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault use="literal" name="ServiceException" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerNode">
      <soap:operation soapAction="" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      <wsdl:input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault use="literal" name="Exception" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault use="literal" name="ServiceException" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCases">
      <soap:operation soapAction="" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      <wsdl:input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault use="literal" name="Exception" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault use="literal" name="ServiceException" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCourtLog">
      <soap:operation soapAction="" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      <wsdl:input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault use="literal" name="Exception" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault use="literal" name="ServiceException" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addLogEntry">
      <soap:operation soapAction="" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      <wsdl:input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault use="literal" name="Exception" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault use="literal" name="ServiceException" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocument">
      <soap:operation soapAction="" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      <wsdl:input>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault use="literal" name="Exception" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault use="literal" name="ServiceException" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DARTSService">
    <wsdl:documentation>@author ewingsg</wsdl:documentation>
    <wsdl:port name="DARTSServicePort" binding="tns:DARTSServicePortBinding">
      <soap:address location="http://test" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
